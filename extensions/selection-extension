class ModelSummaryPanel extends Autodesk.Viewing.UI.PropertyPanel {
    constructor(viewer, container, id, title, options) {
        super(container, id, title, options);
        this.viewer = viewer;

        this.container.style.top = "10px";
        this.container.style.left = "10px";
        this.container.style.width = "600";
        this.container.style.height = "600";
        this.container.style.resize = "auto";
        this.container.style.backgroundColor = 'rgba(255, 255, 255, 0.75)';
    }
    // initialize(){
    //     this.container.style.top = "10px";
    //     this.container.style.left = "10px";
    //     this.container.style.width = "600";
    //     this.container.style.height = "600";
    //     this.container.style.resize = "auto";
    //     this.container.style.backgroundColor = 'rgba(255, 255, 255, 0.75)';
    // }

}
/////////////////////////////////////////
class HandleSelectionExtension extends Autodesk.Viewing.Extension {
    constructor(viewer, options) {
        super(viewer, options);
        this._group = null;
        this._button = null;
        // this._modelData = {};
    }

    load() {
        console.log('HandleSelectionExtension has been loaded');
        return true;
    }

    unload() {
        // Clean our UI elements if we added any
        if (this._group) {
            this._group.removeControl(handleButton);
            if (this._group.getNumberOfControls() === 0) {
                this.viewer.toolbar.removeControl(this._group);
            }
        }
        console.log('HandleSelectionExtension has been unloaded');
        return true;
    }

    createButton(id, tooltip, addClass){
    let button = new Autodesk.Viewing.UI.Button(id);

    //   button.icon.style.backgroundColor = color;

      button.setToolTip(tooltip);

      button.addClass(addClass);

      return button;

    }


    onToolbarCreated() {
        // Create a new toolbar group if it doesn't exist
        this._group = this.viewer.toolbar.getControl('AwesomeExtensionsToolbar');
        if (!this._group) {
            this._group = new Autodesk.Viewing.UI.ControlGroup('AwesomeExtensionsToolbar');
            this.viewer.toolbar.addControl(this._group);
        }

        let handleButton = this.createButton(
            'handleSelectionExtensionButton',
            'Handle Selection Extension',
            'handleSelectionExtensionIcon',
        )
        let started = false;

        handleButton.onClick = (ev) => {
            // Check if the panel is created or not
            if (this._panel == null) {
                this._panel = new ModelSummaryPanel(this.viewer, this.viewer.container, 'quantityChartPanel', 'Object Property');
            }

            // Get current selection
            const selection = this.viewer.getSelection();
            this.viewer.clearSelection();
            this._panel.removeAllProperties();

            // Show/hide docking panel
            this._panel.setVisible(!this._panel.isVisible());
            // Anything selected?
            if (selection.length > 0) {

                let isolated = [];
                // Iterate through the list of selected dbIds
                selection.forEach((dbId) => {
        
                    // If panel is NOT visible, exit the function
                    if (!this._panel.isVisible())
                    return;
                    // Get properties of each dbId
                    this.viewer.model.getProperties(dbId, (props) => {
                        props.properties.forEach((item) => {
                          // console.log(item);
                            switch (item.displayName){
                                case 'Category':
                                  //  console.log(item.displayName, item.displayValue.replace('Revit', ''));
                                    this._panel.addProperty(item.displayName, item.displayValue.replace('Revit', ''));
                                    break;
                                case 'Width':
                                 //   console.log(Math.round(item.displayValue));
                                    this._panel.addProperty(item.displayName, Math.round(item.displayValue));
                                    break;
                                case 'Height':
                                  //  console.log(Math.round(item.displayValue));
                                    this._panel.addProperty(item.displayName, Math.round(item.displayValue));
                                    break;
                                case 'Area':
                                  //  console.log(Math.round(item.displayValue));
                                    this._panel.addProperty(item.displayName, `${Math.round(item.displayValue)} Sq.m.`);
                                    break;
                            }

                        })
                        
                        // Ask if want to isolate
                        if (selection) {
                            isolated.push(dbId);
                            this.viewer.isolate(isolated);
                            
                        }
                    });
                });
            } else {
                // If nothing selected, restore
                this.viewer.isolate(0);
            }
        }

        this._group.addControl(handleButton);
    }
}

Autodesk.Viewing.theExtensionManager.registerExtension('HandleSelectionExtension', HandleSelectionExtension);
